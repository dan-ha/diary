{
  "openapi": "3.0.0",
  "info": {
    "description": "Authentication service used for Online Diary project",
    "version": "1.0.0",
    "title": "Swagger Authentication Service",
    "termsOfService": "http://Swagger.io/terms/",
    "contact": {
      "email": "daniel.hamarik@gmail.com"
    }
  },
  "tags": [
    {
      "name": "user",
      "description": "authentication operations for Online Diary login/registration"
    }
  ],
  "paths": {
    "/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "description": "Returns User model for specified username",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username of user that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "New User",
        "description": "Create new user for Online Diary",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/passwordCheck": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Authenticate user",
        "description": "Athenticate user and password",
        "operationId": "passwordCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}